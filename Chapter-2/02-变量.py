# author : Mark

"""
变量就是在程序中用来保存数据的容器

1.声明变量(定义变量) - 假的声明
语法：
变量名 = 值

说明：
变量名 - 要求：标识符，不能是关键字
        规范：a.遵守PEP8命名规范(名字的所有字母都小写，如果由多个单词组成，单词之间用_隔开)
             b.见名知义(看到名字就知道变量中存的是什么数据)
= --- 赋值符号，将=右边的值赋给左边的变量
值 --- 可以是任何有结果的表达式,例如：190， 变量, 10+20, 调用函数表达式

"""
age = 18
name = '小明'
number = 2910

# 使用变量的时候，就是在使用变量中保存的值
print(age)

# 变量必须先声明(赋值)再使用
# print(age1) # NameError: name 'age1' is not defined

# 同时声明多个变量，并且赋一样的值。（同时给多个变量赋值）
num1 = num2 = num3 = 10
print(num1, num2, num3)

# 同时声明多个变量，并且赋不同的值。 （注意：变量的个数和值的个数要保持一致）
x, y, z = 10, 20, 12.4
print(x, y, z)

num4 = 100
num4 = 200
print(num4)  # 给同一个变量赋值，后赋的值会覆盖先赋的值
num4 = 'abc'
num4 = [1, 2, 3]
num4 = {'a': 100}
print(num4)  # 同一个变量可以存储不同类型的值

"""
2.声明变量和给变量赋值的本质
结论：python所有的变量，存的都是数据在内存中的地址。内存地址的大小一样
     用一个变量给另外一个变量赋值，实质是将变量中的地址赋给另外一个变量.
     使用变量的时候，是使用的变量中地址对应的值


C中声明变量：
int num = 10
num = 100

python中声明变量：
num = 10
num = 'asdfhaskhfjkh'
"""
num = 2934789327495732987593745973298457893
print(num)

"""
3.变量的三要素：值、地址和类型
值：变量中存的地址对应的值
地址：变量中存储的地址 (id)
类型：变量中存的地址对应的值的类型
"""
name1 = '小明'
name2 = name1

print(name1)  # 使用变量拿到变量中地址对应的值
print(id(name1), id(name2))  # id(变量) - 获取变量中存储的地址
print(type(name1))