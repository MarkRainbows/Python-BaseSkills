"""__author__ = 余婷"""

"""


一旦一个字符串确定，那么字符串中每个字符的位置就确定。
而且每个字符会对应一个用来表示其位置和顺序的下标值。



1.下标(索引)
字符串中的每个字符都有一个下标，代表其在字符串中的位置
下标的范围是: 0 ~ 字符串长度-1  （0代表第一个字符的位置）
            -1 ~ -字符串长度   (-1代表最后一个字符的位置)
"""
'abc'   # 'a': 0/-3   'b':1/-2  'c':2/-1
'abc\n123'  # '1': 4/-3
'abc\u4eff1234' # '1': 4/-3

"""
2.获取单个字符
语法：字符串[下标]  - 获取字符串中，指定下标对应的字符
说明: 字符串 - 可以是字符串常量，也可以是字符串变量(只要结果是字符串就行)
     [] - 固定写法
     下标 - 字符的下标，不能越界
"""
str1 = 'hello python'
print(str1[6], str1[-6])
print(str1[-2])
# print(str1[12])  # IndexError: string index out of range
# print(str1[-20])  # IndexError: string index out of range

"""
3.获取部分字符
方法1：
a.语法：字符串[开始下标:结束下标:步长] 
b.说明：字符串 - 可以是字符串常量，也可以是字符串变量(只要结果是字符串就行)
     [] -  固定写法
     : - 固定写法
     开始下标、结束下标 - 下标值
     步长 - 整数

c.功能：
从开始下标开始获取到结束下标前为止, 每次下标值增加步长对应的值。结果是字符串

d.注意：
当步长是正数(从前往后取), 开始下标对应的字符要在结束下标对应的字符的前面
当步长是负数(从后往前取)，开始下标对应的字符要在结束下标对应的字符的后面

结束下标对应的值取不到的
"""
str1 = 'abcdefghij'
print(str1[0:6:1])
# abcdef
print(str1[0:6:2])
# ace

print('==:',str1[-1:6:-1])

print(str1[-1:2:-2])

"""
方法2：
语法：字符串[开始下标:结束下标]  (相当于步长是1)
"""


str1 = 'abc123abc'
print(str1[-1:3])  # '' - 空串
print(str1[3:-1])

"""
4.获取部分字符，省略下标
获取部分字符的时候，开始下标和结束下标都可以省略
a.开始下标省略
字符串[:结束下标:步长]  或者 字符串[:结束下标]
步长是正数：从字符串开头开始往后获取
步长是负数：从字符串结尾开始往前获取
"""
str1 = 'abc123abc'
print(str1[:4:1])
print(str1[:4:-1])

"""
b.结束下标省略
字符串[开始下标::步长]  或者 字符串[结束下标:]
步长是正数：从开始下标从前往后获取到字符串结束
步长是负数：从开始下标从前后往前获取到字符串开头
"""
print(str1[4:])
print(str1[4::-1])

print(str1[:])
print(str1[::-1])  # 字符串倒序
print(str1[-100:100])  # 这儿的开始下标和结束下标都可以越界
